{"version":3,"file":"newtab.99647b13bad08c324a7a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AAGA;AACA;AACA;AADA;AAFA;AASA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AAHA;AASA;AACA;AAFA;AAQA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AAAA;AAKA;;AA9GA;;AAgHA;AAAA;;;;;;;;;;AAhHA;;;;;;;;;;;;;;;;;ACLA","sources":["webpack://hookmark/./src/pages/Newtab/components/gridview.jsx","webpack://hookmark/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport baseUrl from '../../Content/modules/constants';\nimport BookmarkCard from './bookmarkcard';\nimport { FullScreenClose, Search, X } from '@geist-ui/icons';\n\nconst GridView = ({ uuid }) => {\n  const [hooks, setHooks] = React.useState([]);\n  const [search, setSearch] = React.useState('');\n  const [_, refetch] = React.useState(false);\n  const [searched, setSearched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (uuid) {\n      fetch(`${baseUrl}/hookmark/${uuid}`)\n        .then((res) => res.json())\n        .then((data) => {\n          const hookMap = data.map((hook) => {\n            return {\n              ...hook,\n              title: hook.title ? hook.title : hook.baseuri,\n            };\n          });\n          setHooks(hookMap);\n        });\n    }\n  }, [_, uuid]);\n\n  const handleCancel = () => {\n    setSearch('');\n    setSearched(false);\n    refetch((prev) => !prev);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (search) {\n      const filtered = await fetch(\n        `${baseUrl}/hookmark/${uuid}/search?query=${search}`,\n        {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          const hookMap = data.map((hook) => {\n            return {\n              ...hook,\n              title: hook.title ? hook.title : hook.baseuri,\n            };\n          });\n          return hookMap;\n        })\n        .catch((err) => {\n          console.log(err);\n          return [];\n        });\n\n      setHooks(filtered);\n      setSearched(true);\n    } else {\n      if (searched) {\n        setSearched(false);\n        refetch((prev) => !prev);\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <form\n        onSubmit={handleSubmit}\n        className=\"border-b-2 w-full p-4 border-stone-700 text-stone-100 flex items-center \"\n      >\n        <input\n          type=\"text\"\n          className=\"w-full bg-stone-800 text-stone-100 p-2 px-4 rounded-full outline-none border-2 border-stone-900 focus:border-2 focus:border-purple-500\"\n          placeholder=\"Search\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n\n        {searched ? (\n          <button\n            type=\"button\"\n            onClick={handleCancel}\n            className=\"px-8 py-2 text-stone-100 bg-purple-500 rounded-full ml-4\"\n          >\n            <X />\n          </button>\n        ) : (\n          <button\n            type=\"submit\"\n            className=\"px-8 py-2 text-stone-100 bg-purple-500 rounded-full ml-4\"\n          >\n            <Search />\n          </button>\n        )}\n      </form>\n      <div className=\"flex flex-wrap justify-around m-auto gap-4 p-4\">\n        {hooks?.length === 0 && (\n          <div className=\"w-full text-center text-stone-300\">\n            <p className=\"text-2xl\">Search didn't yield any result</p>\n          </div>\n        )}\n        {hooks?.length &&\n          hooks.map((item, index) => <BookmarkCard key={item.id} {...item} />)}\n        {new Array(3 - (hooks.length % 3)).fill(0).map((_, index) => (\n          <div className=\"w-[350px] sm:w-[48%] md:w-[31%]\"></div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GridView;\n","__webpack_require__.h = () => (\"35ea34330f2682f1ee60\")"],"names":[],"sourceRoot":""}